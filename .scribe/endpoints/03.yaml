name: 'User Management'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/users
    metadata:
      groupName: 'User Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: index
      description: 'Display a listing of the users.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"type":"user","id":1,"attributes":{"name":"Ms. Chloe Marvin","email":"lockman.aaron@example.com","isManager":true},"links":{"self":"http:\/\/tickets-please.test\/api\/v1\/authors\/1"}},{"type":"user","id":2,"attributes":{"name":"Minnie Hettinger MD","email":"uyundt@example.org","isManager":false},"links":{"self":"http:\/\/tickets-please.test\/api\/v1\/authors\/2"}},{"type":"user","id":3,"attributes":{"name":"Shaina Carter","email":"florian02@example.net","isManager":false},"links":{"self":"http:\/\/tickets-please.test\/api\/v1\/authors\/3"}},{"type":"user","id":4,"attributes":{"name":"Prof. Tre Hyatt","email":"devyn41@example.org","isManager":true},"links":{"self":"http:\/\/tickets-please.test\/api\/v1\/authors\/4"}},{"type":"user","id":5,"attributes":{"name":"Sallie Roberts","email":"taylor.padberg@example.net","isManager":true},"links":{"self":"http:\/\/tickets-please.test\/api\/v1\/authors\/5"}},{"type":"user","id":6,"attributes":{"name":"Twila Davis","email":"drippin@example.com","isManager":true},"links":{"self":"http:\/\/tickets-please.test\/api\/v1\/authors\/6"}},{"type":"user","id":7,"attributes":{"name":"Lenna Lockman","email":"quentin.nolan@example.org","isManager":false},"links":{"self":"http:\/\/tickets-please.test\/api\/v1\/authors\/7"}},{"type":"user","id":8,"attributes":{"name":"Mr. Marc Bernhard","email":"cedrick.schmeler@example.org","isManager":true},"links":{"self":"http:\/\/tickets-please.test\/api\/v1\/authors\/8"}},{"type":"user","id":9,"attributes":{"name":"Rene Borer","email":"ymayer@example.net","isManager":true},"links":{"self":"http:\/\/tickets-please.test\/api\/v1\/authors\/9"}},{"type":"user","id":10,"attributes":{"name":"Prof. Adolfo Herzog","email":"djohns@example.net","isManager":true},"links":{"self":"http:\/\/tickets-please.test\/api\/v1\/authors\/10"}}],"links":{"first":"http:\/\/tickets-please.test\/api\/v1\/users?page=1","last":"http:\/\/tickets-please.test\/api\/v1\/users?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/tickets-please.test\/api\/v1\/users?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/tickets-please.test\/api\/v1\/users","per_page":15,"to":10,"total":10}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '56'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1|JbjHTt7TK8sl3bNntBpjHW6bszBomb5Wi8Dbl6cz4624cfc2'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/users
    metadata:
      groupName: 'User Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: store
      description: 'Store a newly created user in storage.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data.attributes:
        name: data.attributes
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data:
        name: data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.name:
        name: data.attributes.name
        description: ''
        required: true
        example: voluptate
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.email:
        name: data.attributes.email
        description: 'Must be a valid email address.'
        required: true
        example: sheridan41@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.isManager:
        name: data.attributes.isManager
        description: ''
        required: true
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.password:
        name: data.attributes.password
        description: ''
        required: true
        example: '=*P6qgxyDyi'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          name: voluptate
          email: sheridan41@example.net
          isManager: false
          password: '=*P6qgxyDyi'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1|JbjHTt7TK8sl3bNntBpjHW6bszBomb5Wi8Dbl6cz4624cfc2'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: 'User Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: show
      description: 'Display the specified user.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"type":"user","id":1,"attributes":{"name":"Ms. Chloe Marvin","email":"lockman.aaron@example.com","isManager":true},"links":{"self":"http:\/\/tickets-please.test\/api\/v1\/authors\/1"}}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '55'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1|JbjHTt7TK8sl3bNntBpjHW6bszBomb5Wi8Dbl6cz4624cfc2'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: 'User Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: destroy
      description: 'Remove the specified user from storage.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1|JbjHTt7TK8sl3bNntBpjHW6bszBomb5Wi8Dbl6cz4624cfc2'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/users/{user}'
    metadata:
      groupName: 'User Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: replace
      description: 'Update the specified resource in storage.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user:
        name: user
        description: 'The user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data.attributes:
        name: data.attributes
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data:
        name: data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.name:
        name: data.attributes.name
        description: ''
        required: true
        example: sed
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.email:
        name: data.attributes.email
        description: 'Must be a valid email address.'
        required: true
        example: lexie.skiles@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.isManager:
        name: data.attributes.isManager
        description: ''
        required: true
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.password:
        name: data.attributes.password
        description: ''
        required: true
        example: '2-lKyX:YXv&=La1'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          name: sed
          email: lexie.skiles@example.net
          isManager: false
          password: '2-lKyX:YXv&=La1'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1|JbjHTt7TK8sl3bNntBpjHW6bszBomb5Wi8Dbl6cz4624cfc2'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/users/{user}'
    metadata:
      groupName: 'User Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: update
      description: 'Update the specified user in storage.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user:
        name: user
        description: 'The user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data.attributes:
        name: data.attributes
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data:
        name: data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.name:
        name: data.attributes.name
        description: ''
        required: false
        example: incidunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.email:
        name: data.attributes.email
        description: 'Must be a valid email address.'
        required: false
        example: fadel.tillman@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.isManager:
        name: data.attributes.isManager
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.password:
        name: data.attributes.password
        description: ''
        required: false
        example: 'zO^"a}'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          name: incidunt
          email: fadel.tillman@example.com
          isManager: false
          password: 'zO^"a}'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1|JbjHTt7TK8sl3bNntBpjHW6bszBomb5Wi8Dbl6cz4624cfc2'
    controller: null
    method: null
    route: null
    custom: []
